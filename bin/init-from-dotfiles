#!/bin/bash
#
# Set up system

set -eu -o pipefail

function usage() {
    echo "./init [--install | -i] [--force-link | -f] [--config | -c]"
}

install=0
force_link=0
config="default"
while (( "$#" )); do
    case $1 in
        -i | --install) install=1 ;;
        -f | --force-link) force_link=1 ;;
        -c | --config) shift; config="$1" ;;
        -h | --help) usage; exit ;;
        *) usage; exit 1 ;;
    esac
    shift
done

bin_dir="$(dirname "$(realpath "$0")")"
dotfiles_dir="$(dirname "$bin_dir")"
sh_dir="$dotfiles_dir/sh"

. "${sh_dir}/config/${config}.sh"

# Create symlinks for dotfiles
"$sh_dir"/link_files.sh "$dotfiles_dir" "$force_link"

if [[ $install -eq 1 ]]; then
    # nix install
    if [[ ! -e "${HOME}/.nix-profile/bin/nix" ]]; then
        export NIX_INSTALLER_NO_MODIFY_PROFILE=1
        curl -L https://nixos.org/nix/install | sh
        . ~/.nix-profile/etc/profile.d/nix.sh
    fi

    # nix packages install
    nix-env --install -A nixpkgs.myPackages
    if [[ "${FULL_INSTALL}" -eq 1 ]]; then
        nix-env --install -A nixpkgs.extraPackages
    fi

    # setup PATH, other environment variables
    . ~/.profile
    . ~/.config/bash/bash_common

    # install python packages
    "$sh_dir"/init_python.sh

    # install tmux
    if [[ ! -d "$XDG_DATA_HOME/tmux/tpm" ]]; then
        git clone https://github.com/tmux-plugins/tpm "$XDG_DATA_HOME/tmux/tpm"
    fi

    if [[ -z "$(ls -A $dotfiles_dir/custom/research-tools)" ]]; then
        cd "$dotfiles_dir" && git submodule update --init
    fi
fi
